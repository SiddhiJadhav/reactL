{"version":3,"sources":["hoc/WithClass.js","hoc/Aux.js","components/Persons/Person/Person.js","components/Persons/Persons.js","components/Cockpit/Cockpit.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["withClass","WrappedComponent","className","WithClass","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","assign","ref","props","forwardedRef","Component","React","forwardRef","aux","children","Person","_this","call","console","log","inputElement","createRef","position","current","focus","Aux","onClick","click","name","age","type","onChange","changed","classes","Persons","lastPersonRef","nextProps","nextState","_this2","persons","map","person","index","Persons_Person_Person","clicked","id","event","PureComponent","cockpit","assignedClasses","btnClass","Button","showPersons","Red","join","length","push","red","bold","appTitle","App","nameChangedHandler","personIndex","state","findIndex","p","objectSpread","target","toConsumableArray","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","prevState","toggleClicked","otherState","components_Persons_Persons","Cockpit_Cockpit","title","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b4e0139b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// const withClass = (WrappedComponent, className) => {\n//     return (props) => (\n//         <div className={className}>\n//             <WrappedComponent {...props} />\n//         </div>\n//     )\n// }\n\nconst withClass = (WrappedComponent, className) => {\n    const WithClass = class extends Component {\n        render () {\n            return (\n                <div className={className}>\n                    <WrappedComponent ref={this.props.forwardedRef} {...this.props} />\n                </div>\n            )\n        }\n    }\n\n    return React.forwardRef((props, ref) => {\n        return <WithClass {...props} forwardedRef={ref} />\n    });\n}\n\n\nexport default withClass;","const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Person.css';\nimport withClass from '../../../hoc/WithClass';\nimport Aux from '../../../hoc/Aux';\n\nclass Person extends Component {\n    constructor( props ) {\n        super( props );\n        console.log( '[Person.js] Inside Constructor', props );\n        this.inputElement = React.createRef();\n    }\n\n    componentWillMount () {\n        console.log( '[Person.js] Inside componentWillMount()' );\n    }\n\n    componentDidMount () {\n        console.log( '[Person.js] Inside componentDidMount()' );\n        if ( this.props.position === 0 ) {\n            this.inputElement.current.focus();\n        }\n    }\n\n    focus() {\n        this.inputElement.current.focus();\n    }\n\n    render () {\n        console.log( '[Person.js] Inside render()' );\n        return (\n            <Aux>\n                <p onClick={this.props.click}>I'm {this.props.name} and I am {this.props.age} years old!</p>\n                <p>{this.props.children}</p>\n                <input\n                    ref={this.inputElement}\n                    type=\"text\"\n                    onChange={this.props.changed}\n                    value={this.props.name} />\n            </Aux>\n        )\n        // return [\n        //     <p key=\"1\" onClick={this.props.click}>I'm {this.props.name} and I am {this.props.age} years old!</p>,\n        //     <p key=\"2\">{this.props.children}</p>,\n        //     <input key=\"3\" type=\"text\" onChange={this.props.changed} value={this.props.name} />\n        // ]\n    }\n}\n\nPerson.propTypes = {\n    click: PropTypes.func,\n    name: PropTypes.string,\n    age: PropTypes.number,\n    changed: PropTypes.func\n};\n\nexport default withClass( Person, classes.Person );","import React, { PureComponent } from 'react';\n\nimport Person from './Person/Person';\n\nclass Persons extends PureComponent {\n    constructor( props ) {\n        super( props );\n        console.log( '[Persons.js] Inside Constructor', props );\n        this.lastPersonRef = React.createRef();\n    }\n\n    componentWillMount () {\n        console.log( '[Persons.js] Inside componentWillMount()' );\n    }\n\n    componentDidMount () {\n        console.log( '[Persons.js] Inside componentDidMount()' );\n        this.lastPersonRef.current.focus();\n    }\n\n    componentWillReceiveProps ( nextProps ) {\n        console.log( '[UPDATE Persons.js] Inside componentWillReceiveProps', nextProps );\n    }\n\n    // shouldComponentUpdate ( nextProps, nextState ) {\n    //     console.log( '[UPDATE Persons.js] Inside shouldComponentUpdate', nextProps, nextState );\n    //     return nextProps.persons !== this.props.persons ||\n    //         nextProps.changed !== this.props.changed ||\n    //         nextProps.clicked !== this.props.clicked;\n    //     // return true;\n    // }\n\n    componentWillUpdate ( nextProps, nextState ) {\n        console.log( '[UPDATE Persons.js] Inside componentWillUpdate', nextProps, nextState );\n    }\n\n    componentDidUpdate () {\n        console.log( '[UPDATE Persons.js] Inside componentDidUpdate' );\n    }\n\n    render () {\n        console.log( '[Persons.js] Inside render()' );\n        return this.props.persons.map( ( person, index ) => {\n            return <Person\n                click={() => this.props.clicked( index )}\n                name={person.name}\n                position={index}\n                age={person.age}\n                ref={this.lastPersonRef}\n                key={person.id}\n                changed={( event ) => this.props.changed( event, person.id )} />\n        } );\n    }\n}\n\nexport default Persons;","import React from 'react';\n\nimport classes from './Cockpit.css';\nimport Aux from '../../hoc/Aux';\n\nconst cockpit = ( props ) => {\n    const assignedClasses = [];\n    let btnClass = classes.Button;\n    if ( props.showPersons ) {\n        btnClass = [classes.Button, classes.Red].join( ' ' );\n    }\n\n    if ( props.persons.length <= 2 ) {\n        assignedClasses.push( classes.red ); // classes = ['red']\n    }\n    if ( props.persons.length <= 1 ) {\n        assignedClasses.push( classes.bold ); // classes = ['red', 'bold']\n    }\n\n    return (\n        <Aux>\n            <h1>{props.appTitle}</h1>\n            <p className={assignedClasses.join( ' ' )}>This is really working!</p>\n            <button\n                className={btnClass}\n                onClick={props.clicked}>Toggle Persons</button>\n        </Aux>\n    );\n};\n\nexport default cockpit;","import React, { PureComponent } from 'react';\n\nimport classes from './App.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Aux from '../hoc/Aux';\nimport withClass from '../hoc/WithClass';\n\nclass App extends PureComponent {\n  constructor( props ) {\n    super( props );\n    console.log( '[App.js] Inside Constructor', props );\n    this.state = {\n      persons: [\n        { id: 'asfa1', name: 'Max', age: 28 },\n        { id: 'vasdf1', name: 'Manu', age: 29 },\n        { id: 'asdf11', name: 'Stephanie', age: 26 }\n      ],\n      otherState: 'some other value',\n      showPersons: false,\n      toggleClicked: 0\n    };\n  }\n\n  componentWillMount () {\n    console.log( '[App.js] Inside componentWillMount()' );\n  }\n\n  componentDidMount () {\n    console.log( '[App.js] Inside componentDidMount()' );\n  }\n\n  // shouldComponentUpdate ( nextProps, nextState ) {\n  //   console.log( '[UPDATE App.js] Inside shouldComponentUpdate', nextProps, nextState );\n  //   return nextState.persons !== this.state.persons ||\n  //     nextState.showPersons !== this.state.showPersons;\n  // }\n\n  componentWillUpdate ( nextProps, nextState ) {\n    console.log( '[UPDATE App.js] Inside componentWillUpdate', nextProps, nextState );\n  }\n\n  componentDidUpdate () {\n    console.log( '[UPDATE App.js] Inside componentDidUpdate' );\n  }\n\n  // state = {\n  //   persons: [\n  //     { id: 'asfa1', name: 'Max', age: 28 },\n  //     { id: 'vasdf1', name: 'Manu', age: 29 },\n  //     { id: 'asdf11', name: 'Stephanie', age: 26 }\n  //   ],\n  //   otherState: 'some other value',\n  //   showPersons: false\n  // }\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex( p => {\n      return p.id === id;\n    } );\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( { persons: persons } );\n  }\n\n  deletePersonHandler = ( personIndex ) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice( personIndex, 1 );\n    this.setState( { persons: persons } );\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState( ( prevState, props ) => {\n      return {\n        showPersons: !doesShow,\n        toggleClicked: prevState.toggleClicked + 1\n      }\n    } );\n  }\n\n  render () {\n    console.log( '[App.js] Inside render()' );\n    let persons = null;\n\n    if ( this.state.showPersons ) {\n      persons = <Persons\n        persons={this.state.persons}\n        clicked={this.deletePersonHandler}\n        changed={this.nameChangedHandler} />;\n    }\n\n    return (\n      <Aux>\n        <button onClick={() => { this.setState( { showPersons: true } ) }}>Show Persons</button>\n        <Cockpit\n          appTitle={this.props.title}\n          showPersons={this.state.showPersons}\n          persons={this.state.persons}\n          clicked={this.togglePersonsHandler} />\n        {persons}\n      </Aux>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default withClass( App, classes.App );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App title=\"Relevant Persons\" />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}