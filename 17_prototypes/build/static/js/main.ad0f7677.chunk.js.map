{"version":3,"sources":["containers/App.module.css","components/Persons/Person/Person.module.css","hoc/WithClass.js","components/Persons/Person/Person.js","components/Persons/Persons.js","hoc/Aux.js","components/Cockpit/Cockpit.js","containers/App.js","registerServiceWorker.js","index.js","components/Cockpit/Cockpit.module.css"],"names":["module","exports","App","Person","withClass","WrappedComponent","className","_Component","_class","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","props","Component","_this","call","console","log","Fragment","onClick","click","name","age","children","type","onChange","changed","classes","Persons","nextProps","nextState","_this2","persons","map","person","index","Persons_Person_Person","clicked","id","event","PureComponent","aux","cockpit","assignedClasses","btnClass","Button","showPersons","Red","join","length","push","red","bold","Aux","appTitle","nameChangedHandler","personIndex","state","findIndex","p","objectSpread","target","toConsumableArray","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","prevState","toggleClicked","otherState","components_Persons_Persons","Cockpit","title","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad0f7677.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3amkg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Person\":\"Person_Person__3dJkw\"};","import React, { Component } from 'react';\n\n// const withClass = (WrappedComponent, className) => {\n//     return (props) => (\n//         <div className={className}>\n//             <WrappedComponent {...props} />\n//         </div>\n//     )\n// }\n\nconst withClass = (WrappedComponent, className) => {\n    return class extends Component {\n        render () {\n            return (\n                <div className={className}>\n                    <WrappedComponent {...this.props} />\n                </div>\n            )\n        }\n    }\n}\n\n\nexport default withClass;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './Person.module.css';\nimport withClass from '../../../hoc/WithClass';\n// import Aux from '../../../hoc/Aux';\n\nclass Person extends Component {\n    constructor( props ) {\n        super( props );\n        console.log( '[Person.js] Inside Constructor', props );\n    }\n\n    componentWillMount () {\n        console.log( '[Person.js] Inside componentWillMount()' );\n    }\n\n    componentDidMount () {\n        console.log( '[Person.js] Inside componentDidMount()' );\n    }\n\n    render () {\n        console.log( '[Person.js] Inside render()' );\n        return (\n            <>\n                <p onClick={this.props.click}>I'm {this.props.name} and I am {this.props.age} years old!</p>\n                <p>{this.props.children}</p>\n                <input type=\"text\" onChange={this.props.changed} value={this.props.name} />\n            </>\n        )\n        // return [\n        //     <p key=\"1\" onClick={this.props.click}>I'm {this.props.name} and I am {this.props.age} years old!</p>,\n        //     <p key=\"2\">{this.props.children}</p>,\n        //     <input key=\"3\" type=\"text\" onChange={this.props.changed} value={this.props.name} />\n        // ]\n    }\n}\n\nPerson.propTypes = {\n    click: PropTypes.func,\n    name: PropTypes.string,\n    age: PropTypes.number,\n    changed: PropTypes.func \n};\n\nexport default withClass(Person, classes.Person);","import React, { PureComponent } from 'react';\n\nimport Person from './Person/Person';\n\nclass Persons extends PureComponent {\n    constructor( props ) {\n        super( props );\n        console.log( '[Persons.js] Inside Constructor', props );\n    }\n\n    componentWillMount () {\n        console.log( '[Persons.js] Inside componentWillMount()' );\n    }\n\n    componentDidMount () {\n        console.log( '[Persons.js] Inside componentDidMount()' );\n    }\n\n    componentWillReceiveProps ( nextProps ) {\n        console.log( '[UPDATE Persons.js] Inside componentWillReceiveProps', nextProps );\n    }\n\n    // shouldComponentUpdate ( nextProps, nextState ) {\n    //     console.log( '[UPDATE Persons.js] Inside shouldComponentUpdate', nextProps, nextState );\n    //     return nextProps.persons !== this.props.persons ||\n    //         nextProps.changed !== this.props.changed ||\n    //         nextProps.clicked !== this.props.clicked;\n    //     // return true;\n    // }\n\n    componentWillUpdate ( nextProps, nextState ) {\n        console.log( '[UPDATE Persons.js] Inside componentWillUpdate', nextProps, nextState );\n    }\n\n    componentDidUpdate () {\n        console.log( '[UPDATE Persons.js] Inside componentDidUpdate' );\n    }\n\n    render () {\n        console.log( '[Persons.js] Inside render()' );\n        return this.props.persons.map( ( person, index ) => {\n            return <Person\n                click={() => this.props.clicked( index )}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={( event ) => this.props.changed( event, person.id )} />\n        } );\n    }\n}\n\nexport default Persons;","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport classes from './Cockpit.module.css';\nimport Aux from '../../hoc/Aux';\n\nconst cockpit = ( props ) => {\n    const assignedClasses = [];\n    let btnClass = classes.Button;\n    if ( props.showPersons ) {\n        btnClass = [classes.Button, classes.Red].join( ' ' );\n    }\n\n    if ( props.persons.length <= 2 ) {\n        assignedClasses.push( classes.red ); // classes = ['red']\n    }\n    if ( props.persons.length <= 1 ) {\n        assignedClasses.push( classes.bold ); // classes = ['red', 'bold']\n    }\n\n    return (\n        <Aux>\n            <h1>{props.appTitle}</h1>\n            <p className={assignedClasses.join( ' ' )}>This is really working!</p>\n            <button\n                className={btnClass}\n                onClick={props.clicked}>Toggle Persons</button>\n        </Aux>\n    );\n};\n\nexport default cockpit;","import React, { PureComponent } from 'react';\n\nimport classes from './App.module.css';\nimport Persons from '../components/Persons/Persons';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport Aux from '../hoc/Aux';\nimport withClass from '../hoc/WithClass';\n\nclass App extends PureComponent {\n  constructor( props ) {\n    super( props );\n    console.log( '[App.js] Inside Constructor', props );\n    this.state = {\n      persons: [\n        { id: 'asfa1', name: 'Max', age: 28 },\n        { id: 'vasdf1', name: 'Manu', age: 29 },\n        { id: 'asdf11', name: 'Stephanie', age: 26 }\n      ],\n      otherState: 'some other value',\n      showPersons: false,\n      toggleClicked: 0\n    };\n  }\n\n  componentWillMount () {\n    console.log( '[App.js] Inside componentWillMount()' );\n  }\n\n  componentDidMount () {\n    console.log( '[App.js] Inside componentDidMount()' );\n  }\n\n  // shouldComponentUpdate ( nextProps, nextState ) {\n  //   console.log( '[UPDATE App.js] Inside shouldComponentUpdate', nextProps, nextState );\n  //   return nextState.persons !== this.state.persons ||\n  //     nextState.showPersons !== this.state.showPersons;\n  // }\n\n  componentWillUpdate ( nextProps, nextState ) {\n    console.log( '[UPDATE App.js] Inside componentWillUpdate', nextProps, nextState );\n  }\n\n  componentDidUpdate () {\n    console.log( '[UPDATE App.js] Inside componentDidUpdate' );\n  }\n\n  // state = {\n  //   persons: [\n  //     { id: 'asfa1', name: 'Max', age: 28 },\n  //     { id: 'vasdf1', name: 'Manu', age: 29 },\n  //     { id: 'asdf11', name: 'Stephanie', age: 26 }\n  //   ],\n  //   otherState: 'some other value',\n  //   showPersons: false\n  // }\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex( p => {\n      return p.id === id;\n    } );\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( { persons: persons } );\n  }\n\n  deletePersonHandler = ( personIndex ) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice( personIndex, 1 );\n    this.setState( { persons: persons } );\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState( ( prevState, props ) => {\n      return {\n        showPersons: !doesShow,\n        toggleClicked: prevState.toggleClicked + 1\n      }\n    } );\n  }\n\n  render () {\n    console.log( '[App.js] Inside render()' );\n    let persons = null;\n\n    if ( this.state.showPersons ) {\n      persons = <Persons\n        persons={this.state.persons}\n        clicked={this.deletePersonHandler}\n        changed={this.nameChangedHandler} />;\n    }\n\n    return (\n      <Aux>\n        <button onClick={() => { this.setState( { showPersons: true } ) }}>Show Persons</button>\n        <Cockpit\n          appTitle={this.props.title}\n          showPersons={this.state.showPersons}\n          persons={this.state.persons}\n          clicked={this.togglePersonsHandler} />\n        {persons}\n      </Aux>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default withClass( App, classes.App );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App title=\"Relevant Persons\" />, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Cockpit_red__3Z9Gn\",\"bold\":\"Cockpit_bold__3TfDw\",\"Button\":\"Cockpit_Button__3DE0v\",\"Red\":\"Cockpit_Red__3kHuw\"};"],"sourceRoot":""}