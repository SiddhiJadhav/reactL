{"version":3,"sources":["containers/App.module.css","components/Persons/Person/Person.js","components/Persons/Persons.js","components/Cockpit/Cockpit.js","containers/App.js","serviceWorker.js","index.js","components/Cockpit/Cockpit.module.css"],"names":["module","exports","App","Person","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","react_default","a","createElement","className","onClick","click","name","age","children","onChange","changed","value","Component","Persons","_this2","persons","map","person","index","Persons_Person_Person","key","id","clicked","bind","event","cockpit","rButton","showToggle","styles","red","classes","length","push","bold","Cockpit","join","show","showContent","showT","setState","deletePerson","indexPerson","toConsumableArray","splice","changeNameHandler","realId","findIndex","p","realPerson","objectSpread","target","changedPersons","components_Persons_Persons","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2b88bd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__sAlZs\"};","// import React from 'react';\nimport React, { Component } from 'react';\nimport './Person.css';  \n\n\nclass Person extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  };\n        console.log(\"Person.js CONSTRUCTOR\");\n\n    }\n  \n    componentWillMount(){\n      console.log(\"Person.js COMPONENT WILL MOUNT\");\n    }\n  \n    componentDidMount(){\n      console.log(\"Person.js COMPONENT DID MOUNT\");\n    }\n      render() {\n          console.log(\"Person.js RENDER\");\n        return (\n            <div className=\"PersonStyle\">\n\n            <h2 onClick={this.props.click}>Hi My Name is {this.props.name}</h2>           \n            <h2>Age :--> {this.props.age} </h2>    \n            <h3>{this.props.children}</h3>\n            <input onChange={this.props.changed} value={this.props.name}/>\n        </div>  \n        );\n    }\n}\n\nexport default Person;\n\n// const person = (props)=>{\n//     return(\n\n//     )\n// }\n\n// export default person;","// import React from 'react'\nimport React, { Component } from 'react';\nimport Person from './Person/Person';\n\nclass Persons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  };\n    console.log(\"Persons.js CONSTRUCTOR\");\n\n  }\n\n  componentWillMount(){\n    console.log(\"Persons.js COMPONENT WILL MOUNT\");\n  }\n\n  componentDidMount(){\n    console.log(\"Persons.js COMPONENT DID MOUNT\");\n  }\n\n\n\n\n  render() {\n    console.log(\"Persons.js RENDER\")\n    return (\n      this.props.persons.map((person,index)=>{\n        return <Person \n        key={person.id} \n        name={person.name} \n        age={person.age} \n        click={this.props.clicked.bind(this,index)}\n        changed={(event)=>this.props.changed(event,person.id)}/>\n      })\n  \n    );\n  }\n}\n\nexport default Persons;\n\n\n// const persons = (props) => (\n    \n        \n// );\n\n// export default persons;","import React from 'react';\n// import './Cockpit.module.css';\nimport styles from './Cockpit.module.css';\n\nconst cockpit = (props) => {\n    let rButton =''\n    if(props.showToggle){\n        rButton=styles.red;\n    }\n    let classes = [];\n    if(props.persons.length<=2){\n      classes.push(styles.red);\n    }\n\n    if(props.persons.length<=1){\n      classes.push(styles.bold);\n    }\n\n    \n    return (\n        <div className={styles.Cockpit}>\n            <h1>WELCOME</h1>\n            <p className={classes.join(' ')}>THIS IS AWESOME</p>\n            <button className={rButton} onClick={props.show}>Click Me</button>\n        </div>\n    );\n}\n\nexport default cockpit;","import React, { Component } from 'react';\n\nimport styles from './App.module.css';\nimport Persons from '../components/Persons/Persons'\nimport Cockpit from '../components/Cockpit/Cockpit'\n\nclass App extends Component {\n\n\n  constructor(props){\n    super(props);\n    console.log(\"app.js CONSTRUCTOR\");\n  }\n\n  componentWillMount(){\n    console.log(\"app.js COMPONENT WILL MOUNT\");\n  }\n\n  componentDidMount(){\n    console.log(\"app.js COMPONENT DID MOUNT\");\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  state={\n    person:[\n      {id:'1',name:\"Ruturaj\",age:26},\n      {id:'2',name:\"Rutu\",age:11},\n      {id:'3',name:\"raj\",age:22}\n    ],\n    showToggle:false\n  }\n\n  showContent=()=>{\n    let showT = this.state.showToggle;\n    this.setState({\n      showToggle:!showT\n    });\n  }\n  \n  deletePerson = (indexPerson)=>{\n    const persons = [...this.state.person];\n    persons.splice(indexPerson,1);\n    this.setState({person:persons});\n  }\n\n  changeNameHandler=(event,id)=>{\n\n    const realId = this.state.person.findIndex(p=>{\n      return p.id===id\n    });\n    \n    const realPerson = {...this.state.person[realId]};\n    realPerson.name = event.target.value;\n    \n    const changedPersons = [...this.state.person];\n    changedPersons[realId]=realPerson;\n    \n    this.setState({person:changedPersons});\n  }\n\n\n  render() {\n    console.log(\"app.js RENDER\");\n    let persons=null;\n    \n    if(this.state.showToggle){\n      persons = (\n          <Persons\n            persons={this.state.person}\n            clicked={this.deletePerson}\n            changed={this.changeNameHandler}\n          />\n      );\n     }\n\n    return (\n      <div className={styles.App}>\n          <Cockpit\n            persons={this.state.person}\n            show={this.showContent}\n            showToggle={this.state.showToggle}\n          />\n          {persons}\n      </div>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Cockpit_red__29oKU\",\"bold\":\"Cockpit_bold__loBpG\",\"Cockpit\":\"Cockpit_Cockpit__3UidN\"};"],"sourceRoot":""}